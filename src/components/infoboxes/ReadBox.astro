---
import type { Read } from "../../airtable/data/reads";
import AuthorList from "../AuthorList.astro";
import SubtleLink from "../links/SubtleLink.astro";
import TitleLink from "../links/TitleLink.astro";
import BaseBox from "./BaseBox.astro";

type Props = {
  read: Read;
  omitAuthorIds?: string[];
  linkToSeries?: boolean;
};
const { read, omitAuthorIds, linkToSeries = true } = Astro.props;
const authors = read.book.authors.filter(
  (a) => !omitAuthorIds?.includes(a.recordId),
);
---

<BaseBox
  type="book"
  notes={read.notes}
  rating={read.rating}
  image={{
    posterUrl: read.book.posterUrl,
    height: 188,
    width: 120,
    title: read.book.title,
    mediaPermalink: read.book.permalink,
  }}
>
  <div slot="title">
    <TitleLink href={read.book.permalink}>
      {read.book.title}
    </TitleLink>{" "}
    {
      authors.length > 0 && (
        <span>
          {Number(omitAuthorIds?.length) ? "with" : "by"}{" "}
          <AuthorList authors={authors} style="subtle" />
        </span>
      )
    }
  </div>

  <Fragment slot="icons">
    {
      read.medium === "Audio" && (
        <div title="Audiobook" class="inline px-1">
          🔈
        </div>
      )
    }
    {
      read.isReread && (
        <div title="Re-read" class="inline px-1">
          🔁
        </div>
      )
    }
    {
      read.book.award && (
        <div title="Award Winning" class="inline px-1">
          {read.book.award.emoji}
        </div>
      )
    }
  </Fragment>

  {
    read.book.series && (
      <div class="text-center md:text-end" slot="subtitle">
        <span class="block border-b-2 border-l-2 border-emerald-600 px-2 md:inline-block">
          {linkToSeries ? (
            <SubtleLink href={read.book.series.permalink}>
              Book #{read.book.numberInSeries}
            </SubtleLink>
          ) : (
            <span>Book #{read.book.numberInSeries}</span>
          )}
        </span>
      </div>
    )
  }

  <Fragment slot="footer">
    <div>
      <span class="hidden md:inline">Finished on:{" "}</span>{read.dateFinished}
    </div>
  </Fragment>
</BaseBox>
