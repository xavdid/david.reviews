---
import { Image } from "astro:assets";

import { medals } from "../../airtable/data/common";
import type { Read } from "../../airtable/data/reads";
import AuthorList from "../AuthorList.astro";
import SubtleLink from "../links/SubtleLink.astro";
import TitleLink from "../links/TitleLink.astro";
import BaseBox from "./BaseBox.astro";

type Props = {
  read: Read;
  omitAuthorIds?: string[];
};
const { read, omitAuthorIds } = Astro.props;
const authors = read.book.authors.filter(
  (a) => !omitAuthorIds?.includes(a.recordId),
);
---

<BaseBox type="book" notes={read.notes} rating={read.rating}>
  <a slot="image" href={read.book.permalink}>
    <Image
      class="max-w-[unset]"
      src={read.book.posterUrl}
      alt={`cover for ${read.book.title}`}
      height={188}
      width={120}
    /></a
  >

  <div slot="title">
    <TitleLink href={read.book.permalink}>
      {read.book.title}
    </TitleLink>{" "}
    {
      authors.length > 0 && (
        <span>
          {Number(omitAuthorIds?.length) ? "with" : "by"}{" "}
          <AuthorList authors={authors} style="subtle" />
        </span>
      )
    }
  </div>

  <Fragment slot="icons">
    {read.medium === "Audio" && <div class="inline px-1">🔈</div>}
    {read.isReread && <div class="inline px-1">🔁</div>}
    {
      read.book.award && (
        <div class="inline px-1">{medals[read.book.award.tier]}</div>
      )
    }
  </Fragment>

  {
    read.book.series && (
      <div class="text-center md:text-end" slot="subtitle">
        <span class="block border-b-2 border-l-2 border-emerald-600 px-2 md:inline-block">
          <SubtleLink href={read.book.series.permalink}>
            Book #{read.book.numberInSeries}
          </SubtleLink>
        </span>
      </div>
    )
  }

  <Fragment slot="footer">
    <div>
      <span class="hidden md:inline">Finished on:{" "}</span>{read.dateFinished}
    </div>
  </Fragment>
</BaseBox>
