---
import type { Read } from "../../airtable/data/reads";
import AuthorList from "../AuthorList.astro";
import SubtleLink from "../links/SubtleLink.astro";
import TitleLink from "../links/TitleLink.astro";
import BaseBox from "./BaseBox.astro";

type Props = {
  read: Read;
  omitAuthorIds?: string[];
  linkToSeries?: boolean;
  nameSeries?: boolean;
};
const {
  read,
  omitAuthorIds,
  linkToSeries = true,
  nameSeries = true,
} = Astro.props;
const authors = read.book.authors.filter(
  (a) => !omitAuthorIds?.includes(a.recordId),
);
---

<BaseBox
  type="book"
  notes={read.notes}
  title={read.book.title}
  permalink={read.book.permalink}
  image={{
    posterUrl: read.book.posterUrl,
    height: 188,
    width: 120,
  }}
  dataRows={[[read.rating, read.dateFinished]]}
  icons={[
    { visible: read.medium === "Audio", title: "Audiobook", icon: "🔈" },
    { visible: read.isReread, title: "Re-read", icon: "🔁" },
    {
      visible: Boolean(read.book.award),
      title: "Award Winning",
      icon: read.book.award?.emoji,
    },
  ]}
  centeredContent={!read.book.series}
  borderColor="border-emerald-600"
  lightEvenColor="even:bg-emerald-50"
  verb="reads"
>
  <div slot="title">
    <TitleLink href={read.book.permalink}>
      {read.book.title}
    </TitleLink>{" "}
    {
      authors.length > 0 && (
        <span>
          {Number(omitAuthorIds?.length) ? "with" : "by"}{" "}
          <AuthorList authors={authors} style="subtle" />
        </span>
      )
    }
  </div>

  <Fragment slot="mobile-info">
    {
      authors.length > 0 && (
        <span>
          {Number(omitAuthorIds?.length) ? "with" : "by"}{" "}
          <AuthorList authors={authors} style="subtle" />
        </span>
      )
    }
    {
      read.book.series && (
        <span class="pt-2">
          {linkToSeries ? (
            <SubtleLink href={read.book.series.permalink}>
              Book #{read.book.numberInSeries}
            </SubtleLink>
          ) : (
            <span>Book #{read.book.numberInSeries}</span>
          )}
          {nameSeries && `in ${read.book.series.name}`}
        </span>
      )
    }
  </Fragment>

  {
    authors.length > 0 && (
      <span slot="desktop-authors">
        {Number(omitAuthorIds?.length) ? "with" : "by"}{" "}
        <AuthorList authors={authors} style="subtle" />
      </span>
    )
  }

  {
    read.book.series && (
      <div slot="desktop-info" class="float-right pb-1 pl-3">
        <span class="inline-block border-b-2 border-l-2 border-emerald-600 px-1">
          {linkToSeries ? (
            <SubtleLink href={read.book.series.permalink}>
              Book #{read.book.numberInSeries}
            </SubtleLink>
          ) : (
            <span>Book #{read.book.numberInSeries}</span>
          )}
        </span>
      </div>
    )
  }
</BaseBox>
