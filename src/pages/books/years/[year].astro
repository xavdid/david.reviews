---
import { loadReads } from "../../../airtable/data/reads";
import { awardYears, buildAwardUrl } from "../../../awards";
import BookLegend from "../../../components/BookLegend.astro";
import PageTitle from "../../../components/PageTitle.astro";
import SubscribeBlurb from "../../../components/SubscribeBlurb.astro";
import ReadBox from "../../../components/infoboxes/ReadBox.astro";
import OmniLink from "../../../components/links/OmniLink.astro";
import Layout from "../../../layouts/Layout.astro";
import { seoTitle } from "../../../utils/data";

type Params = { year: string };

export const getStaticPaths: () => Array<{ params: Params }> = () => {
  return awardYears.map((year) => ({ params: { year: year.toString() } }));
};

const rawReviews = await loadReads();

const { year } = Astro.params as Params;

const filteredReads = rawReviews
  .filter((r) => !r.isReread && r.dateFinished.startsWith(year))
  .toReversed();

const awardUrl = buildAwardUrl(parseInt(year), "books");
---

<Layout
  pageTitle={`${year} Books`}
  pageDescription={`David shares thoughts about the ${rawReviews.length} books he's read.`}
  seoTitle={seoTitle(`Books he read for the first time in ${year}!`)}
  activeTab="books"
>
  <PageTitle>Every Book I Read in {year}</PageTitle>
  <p class="pb-3">
    I read {filteredReads.length} books in {year}. I <OmniLink href={awardUrl}>
      {"wrote in more detail"}
    </OmniLink> about my favorites.
  </p>
  <SubscribeBlurb mediaType="book" classes="pb-3" />
  <BookLegend awardUrl={awardUrl} showRereads={false} />
  <div>
    {filteredReads.map((read) => <ReadBox read={read} />)}
  </div>
</Layout>
