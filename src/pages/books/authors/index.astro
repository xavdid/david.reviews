---
import type { Author } from "../../../airtable/data/authors";
import { loadReads, type Read } from "../../../airtable/data/reads";
import PageTitle from "../../../components/PageTitle.astro";
import StickyTable from "../../../components/StickyTable.astro";
import OmniLink from "../../../components/links/OmniLink.astro";
import Layout from "../../../layouts/Layout.astro";
import { averageRating } from "../../../utils/data";

const reads = await loadReads();

const authors = Object.values(reads).reduce<
  Record<string, Author & { books: Set<string>; reads: Read[] }>
>((result, read) => {
  read.book.authors.forEach((a) => {
    result[a.slug] ||= {
      ...a,
      books: new Set([]),
      reads: [],
    };
    result[a.slug].reads.push(read);
    result[a.slug].books.add(read.book.gbid);
  });

  return result;
}, {});
---

<Layout
  pageTitle={`Book Authors`}
  pageDescription={`A list of the ${
    Object.keys(authors).length
  } different authors I've read at least one book by.`}
  seoTitle={"All Book Authors"}
  activeTab="books"
>
  <PageTitle>All Authors</PageTitle>
  <p class="py-3">
    I've read at least one book by {Object.keys(authors).length} different
    authors. See also:
  </p>
  <ul class="list-disc pb-1 pl-8">
    <li class="pb-3">
      <OmniLink href="/books/">recent reads</OmniLink>
    </li>
    <li class="pb-3">
      <OmniLink href="/books/series/">all series</OmniLink>
    </li>
  </ul>

  <StickyTable
    header={[
      {
        text: "Name",
      },
      {
        text: "# Reads",
        classes: ["px-2"],
      },
      {
        text: "Average Rating",
        classes: ["px-2"],
      },
    ]}
    rows={Object.values(authors)
      .toSorted((a, b) => (a.lastName > b.lastName ? 1 : -1))
      .map((author) => [
        {
          text: author.name,
          linkTo: author.permalink,
          classes: ["p-2"],
        },
        { text: author.reads.length, classes: ["pl-3"] },
        { text: averageRating(author.reads), classes: ["pl-3"] },
      ])}
  />
</Layout>
