---
import slugify from "@sindresorhus/slugify";

import {
  loadMaterializedReads,
  type MaterializedRead,
} from "../../../airtable/data/reads";
import BookBox from "../../../components/infoboxes/bookbox.astro";
import Layout from "../../../layouts/Layout.astro";
import AuthorList from "../../../components/AuthorList.astro";
import BookLegend from "../../../components/BookLegend.astro";
import type { MaterializedSeries } from "../../../airtable/data/series";

type Params = {
  seriesSlug: string;
};

type Props = MaterializedSeries & {
  reads: MaterializedRead[];
};

// own row for weird export reasons
type Result = Promise<Array<{ params: Params; props: Props }>>;
export const getStaticPaths = async (): Result => {
  const reads = await loadMaterializedReads();

  const series = reads.reduce<{ [seriesSlug: string]: Props }>(
    (result, read) => {
      const series = read.book.series;
      if (series) {
        const seriesSlug = series.slug;
        const seriesRecord = result[seriesSlug];

        if (seriesRecord) {
          seriesRecord.reads.push(read);
        } else {
          result[seriesSlug] = {
            ...series,
            reads: [read],
          };
        }
      }
      return result;
    },
    {},
  );

  return Object.entries(series).map(([_, props]) => ({
    params: { seriesSlug: props.slug },
    props,
  }));
};

const { reads, name } = Astro.props;
const numUniqueBooks = new Set(reads.map((r) => r.book.gbid)).size;
---

<Layout title={`${name} - Reviews`} active="books">
  <h1 class="pt-2 text-2xl">
    All reviews for The {name} series
  </h1>
  <p class="pb-2">
    {/* all series are by a single set of authors, for now */}
     by <AuthorList authors={reads[0].book.authors} style="rounded" />
  </p>
  <p class="pb-3">
    There are {reads.length} total reviews of {numUniqueBooks} book{
      reads.length > 1 && "s"
    }.
  </p>
  <BookLegend />
  <div>
    {
      reads
        .sort((a, b) => a.book.numberInSeries! - b.book.numberInSeries!)
        .map((read) => (
          <BookBox
            title={read.book.name}
            slug={read.book.slug}
            rating={read.rating}
            dateFinished={read.dateFinished}
            notes={read.notes}
            isReread={read.isReread}
            googleBooksId={read.book.gbid}
            awardTier={read.book.award?.tier}
            bookMedium={read.medium}
            authors={[]}
            series={
              read.book.series
                ? {
                    name: read.book.series.name,
                    number: read.book.numberInSeries!,
                  }
                : undefined
            }
          />
        ))
    }
  </div>
</Layout>
