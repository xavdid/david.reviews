---
import { loadWatches } from "../../airtable/data/watches";
import SubscribeBlurb from "../../components/SubscribeBlurb.astro";
import WatchBox from "../../components/infoboxes/WatchBox.astro";
import ExternalLink from "../../components/links/ExternalLink.astro";
import RoundedLink from "../../components/links/RoundedLink.astro";
import SubtleLink from "../../components/links/SubtleLink.astro";
import Layout from "../../layouts/Layout.astro";
import { collectionPermalink, seoTitle } from "../../utils";

// this controls the /movies and /movies/all routes
type Result = Array<{ params: { slug: string | undefined } }>;
export const getStaticPaths = (): Result => [
  {
    params: {
      slug: undefined,
    },
  },
  {
    params: {
      slug: "all",
    },
  },
];

const showAll = !!Astro.params.slug;

const watches = await loadWatches();
const watchCounts: Record<string, number> = {};

const watchesWithCounts = watches.map((watch) => {
  const thisWatchNum = watchCounts[watch.movie.tmdbId] ?? 0;
  watchCounts[watch.movie.tmdbId] = thisWatchNum + 1;
  return {
    watch,
    numWatch: watch.movie.numWatches - thisWatchNum,
  };
});
const collectionEmoji = new Set<string>(
  watches
    .map((w) => w.movie.collections?.map((c) => c.emoji))
    .flat()
    .filter(Boolean) as string[],
);

const title = showAll ? "Every Reviewed Movie" : "Recently Reviewed Movies";
const limit = showAll ? undefined : 100;
---

<Layout
  pageTitle={`All Movies`}
  seoTitle={seoTitle("Movies!")}
  seoDescription={`David shares thoughts about the ${
    Object.keys(watchCounts).length
  } movies he's watched.`}
  activeTab="movies"
>
  <h1 class="pb-3 pt-2 text-2xl">{title}</h1>
  <p class="pb-3">
    There are {watchesWithCounts.length} reviews of {
      Object.keys(watchCounts).length
    } movies. {
      !showAll && (
        <>
          This is the most recent {limit}; you can also{" "}
          <SubtleLink href="/movies/all/">see all</SubtleLink>.
        </>
      )
    }
  </p>
  <SubscribeBlurb mediaType="movie" />
  <ul
    class="mb-3 rounded bg-red-50 p-2 dark:bg-red-950 dark:ring-1 dark:ring-white"
  >
    <li class="py-1">
      <code>*</code> - this is my first <em>logged</em> watch, but I had seen
      the movie before.
    </li>
    <li class="py-1">
      {[...collectionEmoji].join(" / ")} - Member of a <RoundedLink
        href={collectionPermalink("")}
      >
        {"collection"}
      </RoundedLink>.
    </li>
    <li class="py-1">
      ðŸ¥‡ / ðŸ¥ˆ / ðŸ¥‰ -
      <ExternalLink href="https://xavd.id/blog/tags/yearly-review">
        {"Favorite of the Year"}
      </ExternalLink> honoree.
    </li>
  </ul>
  <div>
    {
      watchesWithCounts
        .slice(0, limit)
        .map(({ watch, numWatch }) => (
          <WatchBox watch={watch} numWatch={numWatch} />
        ))
    }
  </div>
</Layout>
