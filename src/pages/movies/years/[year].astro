---
import { loadWatches } from "../../../airtable/data/watches";
import { awardYears, buildAwardUrl } from "../../../awards";
import SubscribeBlurb from "../../../components/SubscribeBlurb.astro";
import WatchBox from "../../../components/infoboxes/WatchBox.astro";
import ExternalLink from "../../../components/links/ExternalLink.astro";
import RoundedLink from "../../../components/links/RoundedLink.astro";
import Layout from "../../../layouts/Layout.astro";
import { collectionPermalink, seoTitle } from "../../../utils";

type Params = { year: string };

export const getStaticPaths: () => Array<{ params: Params }> = () => {
  return awardYears.map((year) => ({ params: { year: year.toString() } }));
};

const watches = await loadWatches();
const watchCounts: Record<string, number> = {};

const { year } = Astro.params as Params;

const watchesWithCounts = watches
  .map((watch) => {
    const thisWatchNum = watchCounts[watch.movie.tmdbId] ?? 0;
    watchCounts[watch.movie.tmdbId] = thisWatchNum + 1;
    return {
      watch,
      numWatch: watch.movie.numWatches - thisWatchNum,
    };
  })
  .filter(
    (w) =>
      w.watch.dateFinished.startsWith(year.toString()) && w.watch.isFirstWatch,
  )
  .toReversed();

const collectionEmoji = new Set<string>(
  watchesWithCounts
    .map(({ watch: w }) => w.movie.collections?.map((c) => c.emoji))
    .flat()
    .filter(Boolean) as string[],
);

const awardUrl = buildAwardUrl(parseInt(year), "#movies");
---

<Layout
  pageTitle={`${year} Movies`}
  seoTitle={seoTitle(`Movies he saw for the first time in ${year}!`)}
  seoDescription={`David shares thoughts about the ${
    Object.keys(watchCounts).length
  } movies he watched in ${year}.`}
  activeTab="movies"
>
  <h1 class="pb-3 pt-2 text-2xl">Every Movie I Watched in {year}</h1>
  <p class="pb-3">
    I watched {watchesWithCounts.length} new-to-me movies in {year}. I <ExternalLink
      href={awardUrl}
    >
      {"wrote in more detail"}
    </ExternalLink> about my favorites.
  </p>
  <SubscribeBlurb mediaType="movie" />
  <ul
    class="mb-3 rounded bg-red-50 p-2 dark:bg-red-950 dark:ring-1 dark:ring-white"
  >
    <li class="py-1">
      {[...collectionEmoji].join(" / ")} - Member of a <RoundedLink
        href={collectionPermalink("")}
      >
        {"collection"}
      </RoundedLink>.
    </li>
    <li class="py-1">
      ðŸ¥‡ / ðŸ¥ˆ / ðŸ¥‰ -
      <ExternalLink href={awardUrl}>
        {"Favorite of the Year"}
      </ExternalLink> honoree.
    </li>
  </ul>
  <div>
    {
      watchesWithCounts.map(({ watch, numWatch }) => (
        <WatchBox watch={watch} numWatch={numWatch} />
      ))
    }
  </div>
</Layout>
