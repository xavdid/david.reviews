---
import { loadWatches } from "../../airtable/data/watches";
import SubscribeBlurb from "../../components/SubscribeBlurb.astro";
import WatchBox from "../../components/infoboxes/WatchBox.astro";
import ExternalLink from "../../components/links/ExternalLink.astro";
import RoundedLink from "../../components/links/RoundedLink.astro";
import Layout from "../../layouts/Layout.astro";
import { collectionPermalink, seoTitle } from "../../utils";

const watches = await loadWatches();
const watchCounts: Record<string, number> = {};

const watchesWithCounts = watches.map((watch) => {
  const thisWatchNum = watchCounts[watch.movie.tmdbId] ?? 0;
  watchCounts[watch.movie.tmdbId] = thisWatchNum + 1;
  return {
    watch,
    numWatch: watch.movie.numWatches - thisWatchNum,
  };
});
const collectionEmoji = new Set<string>(
  watches
    .map((w) => w.movie.collections?.map((c) => c.emoji))
    .flat()
    .filter(Boolean) as string[],
);
---

<Layout
  pageTitle={`All Movies`}
  seoTitle={seoTitle("Movies!")}
  seoDescription={`David shares thoughts about the ${
    Object.keys(watchCounts).length
  } movies he's watched.`}
  activeTab="movies"
>
  <h1 class="pb-3 pt-2 text-2xl">Every Reviewed Movie</h1>
  <p class="pb-3">
    There are {watchesWithCounts.length} reviews of {
      Object.keys(watchCounts).length
    } movies.
  </p>
  <SubscribeBlurb mediaType="movie" />
  <ul
    class="mb-3 rounded bg-red-50 p-2 dark:bg-red-950 dark:ring-1 dark:ring-white"
  >
    <li class="py-1">
      <code>*</code> - this is my first <em>logged</em> watch, but I had seen
      the movie before.
    </li>
    <li class="py-1">
      {[...collectionEmoji].join(" / ")} - Member of a <RoundedLink
        href={collectionPermalink("")}
      >
        {"collection"}
      </RoundedLink>.
    </li>
    <li class="py-1">
      ðŸ¥‡ / ðŸ¥ˆ / ðŸ¥‰ -
      <ExternalLink href="https://xavd.id/blog/tags/yearly-review">
        {"Favorite of the Year"}
      </ExternalLink> honoree.
    </li>
  </ul>
  <div>
    {
      watchesWithCounts.map(({ watch, numWatch }) => (
        <WatchBox watch={watch} numWatch={numWatch} />
      ))
    }
  </div>
</Layout>
