---
import { GENRE_DESCRIPTIONS, loadGames } from "../../../airtable/data/games";
import PageTitle from "../../../components/PageTitle.astro";
import OmniLink from "../../../components/links/OmniLink.astro";
import Layout from "../../../layouts/Layout.astro";
import { genrePermalink, pluralize } from "../../../utils/data";

const games = await loadGames();

type GenreRecord = {
  genre: { name: string; slug: string };
  games: Set<string>;
};

const genres = Object.values(games).reduce<Record<string, GenreRecord>>(
  (result, game) => {
    const { name, slug } = game.genre;
    result[slug] ||= {
      genre: { name, slug },
      games: new Set(),
    };
    result[slug].games.add(game.igdbId);

    return result;
  },
  {},
);
---

<Layout
  pageTitle="All Game Genres"
  pageDescription={`I've sorted all games into ${
    Object.keys(genres).length
  } different of core gameplay mechanics.`}
  activeTab="games"
>
  <div class="py-3">
    <PageTitle>All Game Genres</PageTitle>
    <p class="pt-2">
      I categorize games I've played into into a basic genre based on their core
      gameplay loop. It's not an exact science, but it helps ensure I'm not
      playing a bunch of the same style of game in a row. The genres are as
      follows:
    </p>
  </div>
  <ul class="list-disc pl-4">
    {
      Object.values(genres)
        .toSorted((a, b) =>
          a.genre.name > b.genre.name
            ? 1
            : b.genre.name > a.genre.name
              ? -1
              : 0,
        )
        .map(({ genre, games }) => (
          <li class="py-2">
            <OmniLink href={genrePermalink(genre.slug)}>{genre.name}</OmniLink>
            games ({games.size} {pluralize(games.size, "play")}) are categorized
            by {GENRE_DESCRIPTIONS[genre.slug] ?? "MISSING GENRE DESCRIPTION!"}
          </li>
        ))
    }
  </ul>
</Layout>
