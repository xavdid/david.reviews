---
import { Image } from "astro:assets";

import slugify from "@sindresorhus/slugify";
import type { Game } from "../../airtable/data/games";
import { isEtcPlay, loadPlays, type Play } from "../../airtable/data/plays";
import AwardBlurb from "../../components/AwardBlurb.astro";
import PlaySummary from "../../components/infoboxes/PlaySummary.astro";
import ExternalLink from "../../components/links/ExternalLink.astro";
import RoundedLink from "../../components/links/RoundedLink.astro";
import Layout from "../../layouts/Layout.astro";
import {
  averageRating,
  genrePermalink,
  pluralize,
  seoTitle,
} from "../../utils";

type Params = {
  gameSlug: string;
};

type Props = {
  game: Game;
  // first time, replay; used for headline info
  plays: Play[];
  // dlc, etc
  etcPlays: Play[];
};

// own row for weird export reasons
type Result = Promise<Array<{ params: Params; props: Props }>>;
export const getStaticPaths = async (): Result => {
  const watches = await loadPlays();

  const movies = watches.reduce<Record<string, Props>>((result, play) => {
    const igdbId = play.game.igdbId;
    const gameRecord = result[igdbId] ?? {
      game: play.game,
      plays: [],
      etcPlays: [],
    };

    (isEtcPlay(play.playType) ? gameRecord.etcPlays : gameRecord.plays).push(
      play
    );
    result[igdbId] = gameRecord;

    return result;
  }, {});

  return Object.entries(movies).map(([_, props]) => ({
    params: { gameSlug: props.game.slug },
    props,
  }));
};

const {
  plays,
  etcPlays,
  game: { title, posterUrl, award, genre, bigPosterUrl },
} = Astro.props;
---

<Layout
  pageTitle={`${title} - Games`}
  seoTitle={seoTitle(title)}
  seoDescription={`David shares thoughts about the ${plays.length} time${
    plays.length > 1 ? "s" : ""
  } he's played the ${genre} game ${title}.`}
  activeTab="games"
  ogImg={{
    url: bigPosterUrl,
    // this is the size, idk
    height: 724,
    width: 528,
    type: "jpeg",
  }}
>
  <div class="flex py-3">
    <Image
      src={posterUrl}
      alt={`poster for ${title}`}
      height={450 / 2}
      width={300 / 2}
      class="max-h-[225px] max-w-[150px]"
    />
    <div class="pl-3">
      <h1 class="pt-2 text-2xl underline">{title}</h1>
      <p class="pt-2">
        Genre: <RoundedLink href={genrePermalink(slugify(genre))}>
          {genre}
        </RoundedLink>
      </p>
      <p class="pr-2 pt-2">
        I've played the main story {plays.length} time{pluralize(plays)}
         and given it an average score of {averageRating(plays)} (<ExternalLink
          href="https://xavd.id/blog/post/on-the-rating-of-media/"
        >
          {"out of 4"}
        </ExternalLink>).
      </p>
      {
        award && (
          <div class="pt-2">
            <AwardBlurb {...award} category="game" />
          </div>
        )
      }
    </div>
  </div>
  <div>
    {plays.map((play) => <PlaySummary play={play} />)}
  </div>
  {
    etcPlays.length > 0 && (
      <>
        <h2 class="pb-0 text-xl">DLC, etc.</h2>
        <div class="pt-2">
          {etcPlays.map((play) => (
            <PlaySummary play={play} />
          ))}
        </div>
      </>
    )
  }
</Layout>
