---
import { loadPlays } from "../../../airtable/data/plays";
import { awardYears, buildAwardUrl } from "../../../awards";
import GameLegend from "../../../components/GameLegend.astro";
import PageTitle from "../../../components/PageTitle.astro";
import SubscribeBlurb from "../../../components/SubscribeBlurb.astro";
import PlayBox from "../../../components/infoboxes/PlayBox.astro";
import ExternalLink from "../../../components/links/ExternalLink.astro";
import RoundedLink from "../../../components/links/RoundedLink.astro";
import Layout from "../../../layouts/Layout.astro";
import { genrePermalink, seoTitle } from "../../../utils/data";

type Params = { year: string };

export const getStaticPaths: () => Array<{ params: Params }> = () => {
  return awardYears.map((year) => ({ params: { year: year.toString() } }));
};

const plays = await loadPlays();

const { year } = Astro.params as Params;

const filteredPlays = plays
  .filter((p) => p.playType === "First Time" && p.dateFinished.startsWith(year))
  .toReversed();

const awardUrl = buildAwardUrl(parseInt(year), "videogames");

const collectionEmoji = new Set<string>(
  plays
    .map((p) => p.game.collection?.emoji)
    .flat()
    .filter(Boolean) as string[],
);
---

<Layout
  pageTitle={`${year} Games`}
  seoTitle={seoTitle(`Games he played for the first time in ${year}!`)}
  pageDescription={`David shares thoughts about the ${filteredPlays.length} games he played in ${year}.`}
  activeTab="games"
>
  <PageTitle>Every Game I Played in {year}</PageTitle>
  <p class="py-2">
    I played {filteredPlays.length} new-to-me games in {year}. I <ExternalLink
      href={awardUrl}
    >
      {"wrote in more detail"}
    </ExternalLink> about my favorites.
  </p>
  <p class="py-2">
    Each game notes its <RoundedLink href={genrePermalink("")}>
      {"genre"}
    </RoundedLink>, and you can click through to see all the others games from
    that genre I've played.
  </p>
  <SubscribeBlurb mediaType="game" classes="pb-3" />
  <GameLegend collectionEmoji={collectionEmoji} specificAwardUrl={awardUrl} />
  <div>
    {filteredPlays.map((play) => <PlayBox play={play} />)}
  </div>
</Layout>
