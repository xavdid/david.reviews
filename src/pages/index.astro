---
import { Image } from "astro:assets";

import { loadInProgessPlays } from "../airtable/data/inProgressPlays";
import { loadInProgressReads } from "../airtable/data/inProgressReads";
import SubtleLink from "../components/links/SubtleLink.astro";
import Layout from "../layouts/Layout.astro";
import { getPublishedArticles } from "../utils/content";
import {
  getMedia,
  seoTitle,
  sortableDateValue,
  sortDateDescending,
} from "../utils/data";
import SubscribeBlurb from "../components/SubscribeBlurb.astro";
import OmniLink from "../components/links/OmniLink.astro";
import { loadReads } from "../airtable/data/reads";
import { loadPlays } from "../airtable/data/plays";
import { loadWatches } from "../airtable/data/watches";
import Rating from "../components/Rating.astro";
import {
  BookIcon,
  GameIcon,
  MovieIcon,
} from "../components/icons/inline-icons";

// cool wing-shaped boxes
const boxStyles = [
  "flex",
  "w-full",
  "rounded-sm",
  "border-t-2",
  "border-l-2",
  "p-2",
];
// section headers
const titleStyles = ["pb-2", "pt-6", "text-center", "text-4xl", "font-bold"];

const latestArticle = (await getPublishedArticles())[0];

const reads = await loadReads();
const plays = await loadPlays();
const watches = await loadWatches();

const NUM_RECENT_REVIEWS = 6;
const recentReviews = [...reads, ...plays, ...watches]
  .toSorted(sortDateDescending)
  .slice(0, NUM_RECENT_REVIEWS);

const inProgressPlays = (await loadInProgessPlays()).toSorted(
  (a, b) => sortableDateValue(b.dateStarted) - sortableDateValue(a.dateStarted),
);

const inProgressReads = (await loadInProgressReads()).toSorted(
  (a, b) => sortableDateValue(b.dateStarted) - sortableDateValue(a.dateStarted),
);
---

<Layout
  pageTitle={`Home`}
  pageDescription="Learn all about David's review site, where he shares his thoughts on the games he plays, the movies he watches, and the books he reads."
  seoTitle={seoTitle("Games, Movies, and Books")}
  seoDescription=`The home of everything that David reviews.`
>
  <p class="pb-3 pt-4">
    Welcome to <strong>david.reviews</strong>, my small, independent media
    review site. I'm <OmniLink href="https://xavd.id">
      {"David"}
    </OmniLink> and I've reviewing things since 2016.
  </p>

  <h2 class:list={[titleStyles, "underline", "decoration-purple-600"]}>
    Latest Article
  </h2>
  <div class:list={["text-center", "pt-2", "pb-6"]}>
    <SubtleLink href={latestArticle.permalink} classes={["text-xl"]}>
      {latestArticle.data.title}
    </SubtleLink>
  </div>

  <h2 class:list={titleStyles}>Recently Reviewed</h2>
  <div class="flex flex-wrap justify-around">
    {
      recentReviews.map((r) => {
        const Icon =
          r.category === "book"
            ? BookIcon
            : r.category === "game"
              ? GameIcon
              : MovieIcon;

        return (
          <a
            class:list={[
              "rounded-sm",
              "border-2",
              "px-2",
              "py-1",
              "my-2",
              "flex",
              "flex-col",
              "justify-between",
              "hover:bg-zinc-200",
              "dark:hover:bg-zinc-600",
              {
                "border-blue-600": r.category === "game",
                "border-emerald-600": r.category === "book",
                "border-red-600": r.category === "movie",
              },
            ]}
            href={getMedia(r).permalink}
          >
            {/* height is only used for uncached pageloads. But, make it right-ish so stuff doesn't jump a ton. */}
            <Image
              class="py-1"
              src={getMedia(r).posterUrl}
              alt={`poster for ${getMedia(r).title}`}
              height={205}
              width={130}
            />
            <div class="flex justify-between">
              <Rating rating={r.rating} />
              <Icon padding="px-0" />
            </div>
          </a>
        );
      })
    }
  </div>

  <SubscribeBlurb classes={["pt-1", "pb-4", "text-center"]} showSteamButton />

  <h2
    class:list={[
      titleStyles,
      { "underline decoration-blue-600": inProgressPlays.length === 0 },
    ]}
  >
    Now Playing
  </h2>
  <div class="flex flex-wrap justify-around gap-y-2">
    {
      inProgressPlays.length === 0 && (
        <p>
          I'm not playing anything at the moment but I'll be starting something
          from my
          <OmniLink href="https://airtable.com/appLZQMgewaSP7Gg3/shrajGTisjQqBwxLf/tbl0H4RdvzHEZWgdC">
            {"Play Next"}
          </OmniLink>{" "}
          list (or the{" "}
          <OmniLink href="https://airtable.com/appLZQMgewaSP7Gg3/shrMB1f0PQcfg1tnM/tbl0H4RdvzHEZWgdC">
            {"Play Soon"}
          </OmniLink>
          list) shortly.
        </p>
      )
    }
    {
      inProgressPlays.map(
        ({ playType, dateStarted, game: { title, posterUrl } }) => (
          <div class:list={[boxStyles, "border-blue-600"]}>
            <Image
              class="max-w-[unset] py-1"
              src={posterUrl}
              alt={`poster for ${title}`}
              height={160}
              width={120}
            />
            <div class="flex flex-col pl-4">
              <span class="pb-2 text-xl font-bold">{title}</span>
              <span>since: {dateStarted}</span>
              <span>{playType}</span>
            </div>
          </div>
        ),
      )
    }
  </div>
  <h2
    class:list={[
      titleStyles,
      { "underline decoration-emerald-600": inProgressReads.length === 0 },
    ]}
  >
    Now Reading
  </h2>
  <div class="flex flex-wrap justify-around gap-y-2">
    {
      inProgressReads.length === 0 && (
        <p>
          I'm not reading anything at the moment but I'll be starting something
          from my
          <OmniLink href="https://airtable.com/appv2mhWOgkRhR4rK/shrzRTbsZiBhVeugG">
            {"To Read"}
          </OmniLink>{" "}
          list shortly.
        </p>
      )
    }
    {
      inProgressReads.map(
        ({ dateStarted, book: { title, posterUrl, authors }, medium }) => (
          <div class:list={[boxStyles, "border-emerald-600"]}>
            <Image
              class="max-w-[unset] py-1"
              src={posterUrl}
              alt={`poster for ${title}`}
              height={160}
              width={120}
            />
            <div class="flex flex-col pl-4">
              <span class="pb-2 text-xl font-bold">{title}</span>
              <span>by: {authors.map((a) => a.name).join(", ")}</span>
              <span>since: {dateStarted}</span>
              {medium === "Audio" && <span>{medium}</span>}
            </div>
          </div>
        ),
      )
    }
  </div>
</Layout>
